plugins {
    id 'java'
    id 'groovy'
    id 'com.google.cloud.tools.jib' version '2.1.0' apply false
    id 'org.springframework.boot' version '2.2.6.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.9.RELEASE' apply false
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'com.google.cloud.tools.jib'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "Hoxton.SR3")
        set('keycloakVersion', '4.8.3.Final')
        set('openApiVersion', '1.3.3')
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-amqp'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation "org.springdoc:springdoc-openapi-ui:${openApiVersion}"
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'org.postgresql:postgresql'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'org.springframework.amqp:spring-rabbit-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'junit:junit:4.12'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    jib {
        from {
            // arm64 image
            image = 'openjdk@sha256:1cf16117086587938d544382a6c1d111e85772ed3973427c8c68c2959693bfae'
        }
    }

    test {
        useJUnitPlatform()
    }

    sourceCompatibility = '1.8'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}
